const readline = require('readline');
const { google } = require('googleapis');
const Base64 = require('js-base64').Base64;

const messageBuilder = class MessageBuilder {
    constructor(from, to, subject, text) {
        const messageParts = [
            `From: ${from.name} <${from.email}>`,
            `To: <${to}>`,
            'Content-Type: text/html; charset=utf-8',
            'MIME-Version: 1.0',
            `Subject: =?utf-8?B?${Base64.encode(subject)}?=`,
            '',
            `${text}`
        ];

        this.message = messageParts.join('\n');
    } 
    
    build() {
        return this.message;
    }
}

module.exports = {
    GmailAPI: class GmailAPI {
        constructor(credentials, token) {
            this.SCOPES = [
                'https://www.googleapis.com/auth/gmail.readonly',
                'https://www.googleapis.com/auth/gmail.send'
            ];
    
            this.credentials = credentials;
            this.token = token;
            this.authorize();
        }
    
        authorize() {
            const {client_secret, client_id, redirect_uris} = this.credentials.installed;
            this.oAuth2Client = new google.auth.OAuth2(client_id, client_secret, redirect_uris);
            this.oAuth2Client.setCredentials(this.token);
            this.gmail = google.gmail({version: 'v1', auth: this.oAuth2Client});
        }
    
        async sendMessage(message) {  
            const encodedMessage = Base64.encodeURI(message);
    
            return this.gmail.users.messages.send({
                userId: 'me',
                resource: {
                    raw: encodedMessage,
                }
            });
        }

        async sendRegisterData(data) {
            const message = new messageBuilder(
                {
                    name: 'Chinalang', 
                    email: 'catchyclickstudio@gmail.com'
                }, 
                data.email, 
                '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ Chinalang', 
                `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${data.username}! –í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–≤–æ–¥–Ω—ã–π —É—Ä–æ–∫ –ø–æ –∏–∑—É—á–µ–Ω–∏—é –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. üá®üá≥
                <br><br>–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä, —á—Ç–æ–±—ã –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –æ–± —É–¥–æ–±–Ω–æ–º –¥–ª—è –≤–∞—Å –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —É—Ä–æ–∫–∞.
                <br><br>–ê –ø–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–π—Ç–∏ –≤ —Å–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ –Ω–∞—à–µ–º <a href="https://www.china-lang.com">—Å–∞–π—Ç–µ<a/> –∏ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏. ü§ó
                <br><br>–õ–æ–≥–∏–Ω:${data.email}
                <br>–ü–∞—Ä–æ–ª—å:${data.password}`
            ).build();
    
            return this.sendMessage(message);
        }

        async sendUserdata(data) {
            const message = new messageBuilder(
                {
                    name: 'Chinalang', 
                    email: 'catchyclickstudio@gmail.com'
                }, 
                data.email, 
                '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', 
                `–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç!<br>–õ–æ–≥–∏–Ω/email: ${data.email}<br>–ü–∞—Ä–æ–ª—å: ${data.password}`
            ).build();
    
            return this.sendMessage(message);
        }
    },

    messageBuilder 
}